# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    parameters:
      cargo_cache_key:
        type: string
    docker:
      - image: cimg/rust:1.74.0
    steps:
      - checkout
      - run: rustc  --version
      - restore_cache:
          keys:
            - << parameters.cargo_cache_key >>
      - run: rustc  --version
      - run:
          # this step doesn't need to be cached, it's relatively fast (15s on Docker/X-Large)
          name: Install nightly
          command: rustup install nightly
      - run: rustc  --version
      - save_cache:
          # Caching dependencies for future use
          # Build and Clippy steps generate their own target artifacts
          # Test also generates, but significantly more
          # Compromise: saving before Test
          paths:
            - /home/circleci/.cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
            - target/release/.fingerprint
            - target/release/build
            - target/release/deps
          key: << parameters.cargo_cache_key >>
      - run: rustc  --version
  spell-check:
    docker:
      - image: cimg/rust:1.75.0
    steps:
      - run: rustc  --version
      # Checkout the code as the first step.
      - checkout
      - run: rustc  --version
      # Install typos-cli
      #- run: cargo install typos-cli@1.16.25
      - run: cargo install typos-cli
      # Run code spell check
      - run: typos

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  example:
    jobs:
      - build-and-test:
          cargo_cache_key: cargo-cache-{{ checksum "Cargo.lock" }}-{{ checksum "rust-toolchain.toml" }}-v1
      - spell-check
